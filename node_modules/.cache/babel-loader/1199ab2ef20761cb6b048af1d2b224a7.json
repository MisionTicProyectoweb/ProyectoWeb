{"ast":null,"code":"import axios from 'axios';\nexport const obtenerVentas = async (setVentas, setEjecutarVentas = () => {}) => {\n  const options = {\n    method: 'GET',\n    url: 'http://localhost:5000/ventas/'\n  };\n  await axios.request(options).then(function (response) {\n    setVentas(response.data);\n  }).catch(function (error) {\n    console.error(error);\n  });\n  setEjecutarVentas(false);\n};\nexport const obtenerUsuarios = async (setVentas, setEjecutarUsuarios = () => {}) => {\n  const options = {\n    method: 'GET',\n    url: 'http://localhost:5000/usuarios/'\n  };\n  await axios.request(options).then(function (response) {\n    setVentas(response.data);\n    setEjecutarUsuarios(false);\n  });\n};\nexport const obtenerProductos = async (resCallback, errCallback) => {\n  const options = {\n    method: 'GET',\n    url: 'http://localhost:5000/productos/'\n  };\n  await executeRequest(options, resCallback, errCallback);\n};\nexport const crearProducto = async (data, resCallback, errCallback) => {\n  const options = {\n    method: 'POST',\n    url: 'http://localhost:5000/productos/',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    data\n  };\n  await executeRequest(options, resCallback, errCallback);\n};\nexport const actualizarProducto = async (id, data, resCallback, errCallback) => {\n  const options = {\n    method: 'PATCH',\n    url: `http://localhost:5000/productos/${id}/`,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    data\n  };\n  await executeRequest(options, resCallback, errCallback);\n};\nexport const eliminarProducto = async (id, resCallback, errCallback) => {\n  const options = {\n    method: 'DELETE',\n    url: `http://localhost:5000/productos/${id}/`,\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  await executeRequest(options, resCallback, errCallback);\n};","map":{"version":3,"sources":["C:/Users/ITO/Documents/PROYECTOS/MISIONTIC/ProyectoWeb/src/utils/api.js"],"names":["axios","obtenerVentas","setVentas","setEjecutarVentas","options","method","url","request","then","response","data","catch","error","console","obtenerUsuarios","setEjecutarUsuarios","obtenerProductos","resCallback","errCallback","executeRequest","crearProducto","headers","actualizarProducto","id","eliminarProducto"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,aAAa,GAAG,OAAOC,SAAP,EAAkBC,iBAAiB,GAAG,MAAM,CAAE,CAA9C,KAAmD;AAE9E,QAAMC,OAAO,GAAG;AAAEC,IAAAA,MAAM,EAAE,KAAV;AAAiBC,IAAAA,GAAG,EAAE;AAAtB,GAAhB;AAEA,QAAMN,KAAK,CACRO,OADG,CACKH,OADL,EAEHI,IAFG,CAEE,UAAUC,QAAV,EAAoB;AACxBP,IAAAA,SAAS,CAACO,QAAQ,CAACC,IAAV,CAAT;AACD,GAJG,EAKHC,KALG,CAKG,UAAUC,KAAV,EAAiB;AACtBC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,GAPG,CAAN;AAQAT,EAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,CAbM;AAeP,OAAO,MAAMW,eAAe,GAAG,OAAOZ,SAAP,EAAkBa,mBAAmB,GAAG,MAAM,CAAE,CAAhD,KAAqD;AAElF,QAAMX,OAAO,GAAG;AAAEC,IAAAA,MAAM,EAAE,KAAV;AAAiBC,IAAAA,GAAG,EAAE;AAAtB,GAAhB;AAEA,QAAMN,KAAK,CACRO,OADG,CACKH,OADL,EAEHI,IAFG,CAEE,UAAUC,QAAV,EAAoB;AACxBP,IAAAA,SAAS,CAACO,QAAQ,CAACC,IAAV,CAAT;AACJK,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACG,GALG,CAAN;AAMD,CAVM;AAYP,OAAO,MAAMC,gBAAgB,GAAG,OAAMC,WAAN,EAAmBC,WAAnB,KAAmC;AACjE,QAAMd,OAAO,GAAG;AAAEC,IAAAA,MAAM,EAAE,KAAV;AAAiBC,IAAAA,GAAG,EAAE;AAAtB,GAAhB;AACA,QAAMa,cAAc,CAACf,OAAD,EAAUa,WAAV,EAAuBC,WAAvB,CAApB;AACD,CAHM;AAMP,OAAO,MAAME,aAAa,GAAG,OAAMV,IAAN,EAAYO,WAAZ,EAAyBC,WAAzB,KAAyC;AACpE,QAAMd,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,MADM;AAEdC,IAAAA,GAAG,EAAE,kCAFS;AAGde,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAHK;AAIdX,IAAAA;AAJc,GAAhB;AAMA,QAAMS,cAAc,CAACf,OAAD,EAAUa,WAAV,EAAuBC,WAAvB,CAApB;AACD,CARM;AAUP,OAAO,MAAMI,kBAAkB,GAAG,OAAMC,EAAN,EAAUb,IAAV,EAAgBO,WAAhB,EAA6BC,WAA7B,KAA6C;AAC7E,QAAMd,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,OADM;AAEdC,IAAAA,GAAG,EAAG,mCAAkCiB,EAAG,GAF7B;AAGdF,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAHK;AAIdX,IAAAA;AAJc,GAAhB;AAMA,QAAMS,cAAc,CAACf,OAAD,EAAUa,WAAV,EAAuBC,WAAvB,CAApB;AACD,CARM;AAUP,OAAO,MAAMM,gBAAgB,GAAG,OAAOD,EAAP,EAAWN,WAAX,EAAwBC,WAAxB,KAAwC;AACtE,QAAMd,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,QADM;AAEdC,IAAAA,GAAG,EAAG,mCAAkCiB,EAAG,GAF7B;AAGdF,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AAHK,GAAhB;AAKA,QAAMF,cAAc,CAACf,OAAD,EAAUa,WAAV,EAAuBC,WAAvB,CAApB;AACD,CAPM","sourcesContent":["import axios from 'axios';\r\n\r\nexport const obtenerVentas = async (setVentas, setEjecutarVentas = () => {}) => {\r\n\r\n  const options = { method: 'GET', url: 'http://localhost:5000/ventas/' };\r\n\r\n  await axios\r\n    .request(options)\r\n    .then(function (response) {\r\n      setVentas(response.data);\r\n    })\r\n    .catch(function (error) {\r\n      console.error(error);\r\n    });\r\n  setEjecutarVentas(false);\r\n};\r\n\r\nexport const obtenerUsuarios = async (setVentas, setEjecutarUsuarios = () => {}) => {\r\n\r\n  const options = { method: 'GET', url: 'http://localhost:5000/usuarios/' };\r\n\r\n  await axios\r\n    .request(options)\r\n    .then(function (response) {\r\n      setVentas(response.data);\r\n  setEjecutarUsuarios(false);\r\n    });\r\n}\r\n\r\nexport const obtenerProductos = async(resCallback, errCallback) => {\r\n  const options = { method: 'GET', url: 'http://localhost:5000/productos/'};\r\n  await executeRequest(options, resCallback, errCallback);\r\n};\r\n\r\n\r\nexport const crearProducto = async(data, resCallback, errCallback) => {\r\n  const options = {\r\n    method: 'POST',\r\n    url: 'http://localhost:5000/productos/',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    data,\r\n  };\r\n  await executeRequest(options, resCallback, errCallback);\r\n};\r\n\r\nexport const actualizarProducto = async(id, data, resCallback, errCallback) => {\r\n  const options = {\r\n    method: 'PATCH',\r\n    url: `http://localhost:5000/productos/${id}/`,\r\n    headers: { 'Content-Type': 'application/json' },\r\n    data,\r\n  };\r\n  await executeRequest(options, resCallback, errCallback);\r\n};\r\n\r\nexport const eliminarProducto = async (id, resCallback, errCallback) => {\r\n  const options = {\r\n    method: 'DELETE',\r\n    url: `http://localhost:5000/productos/${id}/`,\r\n    headers: { 'Content-Type': 'application/json' },\r\n  };\r\n  await executeRequest(options, resCallback, errCallback);\r\n};"]},"metadata":{},"sourceType":"module"}